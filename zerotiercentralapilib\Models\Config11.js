/**
 * ZeroTierCentralAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Config11
 *
 * @constructor
 */
angular.module('ZeroTierCentralAPILib')
    .factory('Config11', ['BaseModel',
        function (BaseModel) {
            var Config11 = function (obj) {
                if (!obj) {
                    this.id = null;
                    this.address = null;
                    this.nwid = null;
                    this.objtype = null;
                    this.authorized = null;
                    this.authHistory = null;
                    this.capabilities = null;
                    this.tags = null;
                    this.creationTime = null;
                    this.identity = null;
                    this.ipAssignments = null;
                    this.lastAuthorizedTime = null;
                    this.lastDeauthorizedTime = null;
                    this.lastRequestMetaData = null;
                    this.noAutoAssignIps = null;
                    this.recentLog = null;
                    this.revision = null;
                } else {
                    this.id = obj.id;
                    this.address = obj.address;
                    this.nwid = obj.nwid;
                    this.objtype = obj.objtype;
                    this.authorized = obj.authorized;
                    this.authHistory = obj.authHistory;
                    this.capabilities = obj.capabilities;
                    this.tags = obj.tags;
                    this.creationTime = obj.creationTime;
                    this.identity = obj.identity;
                    this.ipAssignments = obj.ipAssignments;
                    this.lastAuthorizedTime = obj.lastAuthorizedTime;
                    this.lastDeauthorizedTime = obj.lastDeauthorizedTime;
                    this.lastRequestMetaData = obj.lastRequestMetaData;
                    this.noAutoAssignIps = obj.noAutoAssignIps;
                    this.recentLog = obj.recentLog;
                    this.revision = obj.revision;
                }
            }
    
            Config11.prototype = new BaseModel();
            Config11.prototype.constructor = Config11;
        
            /**
             * 10-digit ZeroTier node ID [ro]
             *
             * @return {string|null}
             */
            Config11.prototype.getId = function () {
                return this.id;
            };
        
            /**
             * Setter for Id
             * 
             * @param {string|null} value 
             */
            Config11.prototype.setId = function (value) {
                this.id = value;
            };
        
            /**
             * 10-digit ZeroTier node ID [ro]
             *
             * @return {string|null}
             */
            Config11.prototype.getAddress = function () {
                return this.address;
            };
        
            /**
             * Setter for Address
             * 
             * @param {string|null} value 
             */
            Config11.prototype.setAddress = function (value) {
                this.address = value;
            };
        
            /**
             * 16-digit network ID [ro]
             *
             * @return {string|null}
             */
            Config11.prototype.getNwid = function () {
                return this.nwid;
            };
        
            /**
             * Setter for Nwid
             * 
             * @param {string|null} value 
             */
            Config11.prototype.setNwid = function (value) {
                this.nwid = value;
            };
        
            /**
             * Object type on controller ("member") [ro]
             *
             * @return {string|null}
             */
            Config11.prototype.getObjtype = function () {
                return this.objtype;
            };
        
            /**
             * Setter for Objtype
             * 
             * @param {string|null} value 
             */
            Config11.prototype.setObjtype = function (value) {
                this.objtype = value;
            };
        
            /**
             * True if authorized (only matters on private networks) [rw]
             *
             * @return {bool|null}
             */
            Config11.prototype.getAuthorized = function () {
                return this.authorized;
            };
        
            /**
             * Setter for Authorized
             * 
             * @param {bool|null} value 
             */
            Config11.prototype.setAuthorized = function (value) {
                this.authorized = value;
            };
        
            /**
             * History of most recent authentications [ro]
             *
             * @return {array|null}
             */
            Config11.prototype.getAuthHistory = function () {
                return this.authHistory;
            };
        
            /**
             * Setter for AuthHistory
             * 
             * @param {array|null} value 
             */
            Config11.prototype.setAuthHistory = function (value) {
                this.authHistory = value;
            };
        
            /**
             * Array of IDs of capabilities assigned to this member [rw]
             *
             * @return {array|null}
             */
            Config11.prototype.getCapabilities = function () {
                return this.capabilities;
            };
        
            /**
             * Setter for Capabilities
             * 
             * @param {array|null} value 
             */
            Config11.prototype.setCapabilities = function (value) {
                this.capabilities = value;
            };
        
            /**
             * Array of tuples of tag ID, tag value [rw]
             *
             * @return {array|null}
             */
            Config11.prototype.getTags = function () {
                return this.tags;
            };
        
            /**
             * Setter for Tags
             * 
             * @param {array|null} value 
             */
            Config11.prototype.setTags = function (value) {
                this.tags = value;
            };
        
            /**
             * Time member record was first created [ro]
             *
             * @return {double|null}
             */
            Config11.prototype.getCreationTime = function () {
                return this.creationTime;
            };
        
            /**
             * Setter for CreationTime
             * 
             * @param {double|null} value 
             */
            Config11.prototype.setCreationTime = function (value) {
                this.creationTime = value;
            };
        
            /**
             * ZeroTier public identity of member (address and public key) [ro]
             *
             * @return {string|null}
             */
            Config11.prototype.getIdentity = function () {
                return this.identity;
            };
        
            /**
             * Setter for Identity
             * 
             * @param {string|null} value 
             */
            Config11.prototype.setIdentity = function (value) {
                this.identity = value;
            };
        
            /**
             * Array of IP assignments published to member [rw]
             *
             * @return {array|null}
             */
            Config11.prototype.getIpAssignments = function () {
                return this.ipAssignments;
            };
        
            /**
             * Setter for IpAssignments
             * 
             * @param {array|null} value 
             */
            Config11.prototype.setIpAssignments = function (value) {
                this.ipAssignments = value;
            };
        
            /**
             * Time member was last authorized on network [ro]
             *
             * @return {double|null}
             */
            Config11.prototype.getLastAuthorizedTime = function () {
                return this.lastAuthorizedTime;
            };
        
            /**
             * Setter for LastAuthorizedTime
             * 
             * @param {double|null} value 
             */
            Config11.prototype.setLastAuthorizedTime = function (value) {
                this.lastAuthorizedTime = value;
            };
        
            /**
             * Time member was last de-authorized on network [ro]
             *
             * @return {double|null}
             */
            Config11.prototype.getLastDeauthorizedTime = function () {
                return this.lastDeauthorizedTime;
            };
        
            /**
             * Setter for LastDeauthorizedTime
             * 
             * @param {double|null} value 
             */
            Config11.prototype.setLastDeauthorizedTime = function (value) {
                this.lastDeauthorizedTime = value;
            };
        
            /**
             * Raw request meta-data received from member's most recent request [ro]
             *
             * @return {string|null}
             */
            Config11.prototype.getLastRequestMetaData = function () {
                return this.lastRequestMetaData;
            };
        
            /**
             * Setter for LastRequestMetaData
             * 
             * @param {string|null} value 
             */
            Config11.prototype.setLastRequestMetaData = function (value) {
                this.lastRequestMetaData = value;
            };
        
            /**
             * If true do not auto-assign IPv4 or IPv6 addresses, overriding network settings [rw]
             *
             * @return {bool|null}
             */
            Config11.prototype.getNoAutoAssignIps = function () {
                return this.noAutoAssignIps;
            };
        
            /**
             * Setter for NoAutoAssignIps
             * 
             * @param {bool|null} value 
             */
            Config11.prototype.setNoAutoAssignIps = function (value) {
                this.noAutoAssignIps = value;
            };
        
            /**
             * Log of most recent requests from member [ro]
             *
             * @return {array|null}
             */
            Config11.prototype.getRecentLog = function () {
                return this.recentLog;
            };
        
            /**
             * Setter for RecentLog
             * 
             * @param {array|null} value 
             */
            Config11.prototype.setRecentLog = function (value) {
                this.recentLog = value;
            };
        
            /**
             * Member record revision counter [ro]
             *
             * @return {double|null}
             */
            Config11.prototype.getRevision = function () {
                return this.revision;
            };
        
            /**
             * Setter for Revision
             * 
             * @param {double|null} value 
             */
            Config11.prototype.setRevision = function (value) {
                this.revision = value;
            };
        
            return Config11;
        }
    ]);

}(angular));

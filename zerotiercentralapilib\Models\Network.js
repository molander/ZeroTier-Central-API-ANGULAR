/**
 * ZeroTierCentralAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io )
 */

;(function (angular) {
'use strict';

/**
 * Creates a instance of Network
 *
 * @constructor
 */
angular.module('ZeroTierCentralAPILib')
    .factory('Network', ['BaseModel', 'Permissions', 'Config',
        function (BaseModel, Permissions, Config) {
            var Network = function (obj) {
                if (!obj) {
                    this.id = null;
                    this.type = null;
                    this.clock = null;
                    this.ui = null;
                    this.rulesSource = null;
                    this.description = null;
                    this.permissions = null;
                    this.onlineMemberCount = null;
                    this.capabilitiesByName = null;
                    this.tagsByName = null;
                    this.circuitTestEvery = null;
                    this.config = null;
                } else {
                    this.id = obj.id;
                    this.type = obj.type;
                    this.clock = obj.clock;
                    this.ui = obj.ui;
                    this.rulesSource = obj.rulesSource;
                    this.description = obj.description;
                    this.permissions = new Permissions(obj.permissions);
                    this.onlineMemberCount = obj.onlineMemberCount;
                    this.capabilitiesByName = obj.capabilitiesByName;
                    this.tagsByName = obj.tagsByName;
                    this.circuitTestEvery = obj.circuitTestEvery;
                    this.config = new Config(obj.config);
                }
            }
    
            Network.prototype = new BaseModel();
            Network.prototype.constructor = Network;
        
            /**
             * 16-digit ZeroTier network ID [ro]
             *
             * @return {string|null}
             */
            Network.prototype.getId = function () {
                return this.id;
            };
        
            /**
             * Setter for Id
             * 
             * @param {string|null} value 
             */
            Network.prototype.setId = function (value) {
                this.id = value;
            };
        
            /**
             * Object type ("Network") [ro]
             *
             * @return {string|null}
             */
            Network.prototype.getType = function () {
                return this.type;
            };
        
            /**
             * Setter for Type
             * 
             * @param {string|null} value 
             */
            Network.prototype.setType = function (value) {
                this.type = value;
            };
        
            /**
             * Current system clock on server [ro]
             *
             * @return {double|null}
             */
            Network.prototype.getClock = function () {
                return this.clock;
            };
        
            /**
             * Setter for Clock
             * 
             * @param {double|null} value 
             */
            Network.prototype.setClock = function (value) {
                this.clock = value;
            };
        
            /**
             * Arbitrary data that is stored and used by the UI [rw]
             *
             * @return {object|null}
             */
            Network.prototype.getUi = function () {
                return this.ui;
            };
        
            /**
             * Setter for Ui
             * 
             * @param {object|null} value 
             */
            Network.prototype.setUi = function (value) {
                this.ui = value;
            };
        
            /**
             * Source code of network rule set [rw]
             *
             * @return {string|null}
             */
            Network.prototype.getRulesSource = function () {
                return this.rulesSource;
            };
        
            /**
             * Setter for RulesSource
             * 
             * @param {string|null} value 
             */
            Network.prototype.setRulesSource = function (value) {
                this.rulesSource = value;
            };
        
            /**
             * Long description of this network [rw]
             *
             * @return {string|null}
             */
            Network.prototype.getDescription = function () {
                return this.description;
            };
        
            /**
             * Setter for Description
             * 
             * @param {string|null} value 
             */
            Network.prototype.setDescription = function (value) {
                this.description = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {Permissions|null}
             */
            Network.prototype.getPermissions = function () {
                return this.permissions;
            };
        
            /**
             * Setter for Permissions
             * 
             * @param {Permissions|null} value 
             */
            Network.prototype.setPermissions = function (value) {
                this.permissions = value;
            };
        
            /**
             * Number of members online [ro]
             *
             * @return {double|null}
             */
            Network.prototype.getOnlineMemberCount = function () {
                return this.onlineMemberCount;
            };
        
            /**
             * Setter for OnlineMemberCount
             * 
             * @param {double|null} value 
             */
            Network.prototype.setOnlineMemberCount = function (value) {
                this.onlineMemberCount = value;
            };
        
            /**
             * Capabilities defined in rule set by name [rw]
             *
             * @return {object|null}
             */
            Network.prototype.getCapabilitiesByName = function () {
                return this.capabilitiesByName;
            };
        
            /**
             * Setter for CapabilitiesByName
             * 
             * @param {object|null} value 
             */
            Network.prototype.setCapabilitiesByName = function (value) {
                this.capabilitiesByName = value;
            };
        
            /**
             * Tags defined in rule set by name [rw]
             *
             * @return {object|null}
             */
            Network.prototype.getTagsByName = function () {
                return this.tagsByName;
            };
        
            /**
             * Setter for TagsByName
             * 
             * @param {object|null} value 
             */
            Network.prototype.setTagsByName = function (value) {
                this.tagsByName = value;
            };
        
            /**
             * Circuit test this network every N milliseconds [ro]
             *
             * @return {double|null}
             */
            Network.prototype.getCircuitTestEvery = function () {
                return this.circuitTestEvery;
            };
        
            /**
             * Setter for CircuitTestEvery
             * 
             * @param {double|null} value 
             */
            Network.prototype.setCircuitTestEvery = function (value) {
                this.circuitTestEvery = value;
            };
        
            /**
             * TODO: Write general description for this method
             *
             * @return {Config|null}
             */
            Network.prototype.getConfig = function () {
                return this.config;
            };
        
            /**
             * Setter for Config
             * 
             * @param {Config|null} value 
             */
            Network.prototype.setConfig = function (value) {
                this.config = value;
            };
        
            return Network;
        }
    ]);

}(angular));
